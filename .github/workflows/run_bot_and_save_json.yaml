name: Regularly forecast new questions and save JSON

on:
  workflow_dispatch:
  schedule:
    - cron: \"*/10 * * * *\"  # runs every 10 minutes

concurrency:
  group: forecast-workflow
  cancel-in-progress: false  # Ensures only one instance runs at a time

jobs:
  forecast_questions:
    runs-on: ubuntu-latest
    env:
      SUBMIT_PREDICTION: ${{ vars.SUBMIT_PREDICTION }}
      USE_EXAMPLE_QUESTIONS: ${{ vars.USE_EXAMPLE_QUESTIONS }}
      SKIP_PREVIOUSLY_FORECASTED_QUESTIONS: ${{ vars.SKIP_PREVIOUSLY_FORECASTED_QUESTIONS }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: \"3.11\"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached poetry dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Run Forecast Bot
        continue-on-error: true
        run: |
          poetry run python main.py
        env:
          METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ASKNEWS_SECRET: ${{ secrets.ASKNEWS_SECRET }}
          ASKNEWS_CLIENT_ID: ${{ secrets.ASKNEWS_CLIENT_ID }}

      - name: Check forecasts directory
        run: |
          [ -d forecasts ] && ls -lh forecasts || echo \"No forecasts created.\"

      - name: Zip new forecasts only
        run: |
          mkdir -p artifacts
          if [ -d forecasts ]; then
            git add forecasts
            git status --porcelain forecasts | awk '{print $2}' | zip artifacts/new_forecasts.zip -@
          else
            echo \"forecasts directory does not exist. Skipping zip.\"
          fi

      - name: Upload forecasts artifact
        uses: actions/upload-artifact@v4
        with:
          name: new_forecasts
          path: artifacts/new_forecasts.zip

      - name: Commit and Push Forecasts if Changed
        run: |
          git config --global user.name \"github-actions[bot]\"
          git config --global user.email \"github-actions[bot]@users.noreply.github.com\"

          git add forecasts .cache
          if ! git diff --cached --quiet; then
            git commit -m \"Automated Forecast Update $(date +'%Y-%m-%d %H:%M:%S')\"
            git pull --rebase origin main
            git push origin main
          else
            echo \"No changes detected. Skipping commit.\"
          fi

name: Regularly forecast new questions and save JSON

on:
  workflow_dispatch:
  schedule:
    - cron: "*/10 * * * *"

concurrency:
  group: forecast-workflow
  cancel-in-progress: true

jobs:
  forecast:
    runs-on: ubuntu-latest

    env:
      SUBMIT_PREDICTION: ${{ vars.SUBMIT_PREDICTION }}
      USE_EXAMPLE_QUESTIONS: ${{ vars.USE_EXAMPLE_QUESTIONS }}
      SKIP_PREVIOUSLY_FORECASTED_QUESTIONS: ${{ vars.SKIP_PREVIOUSLY_FORECASTED_QUESTIONS }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.11"

      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache poetry venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run bot
        run: poetry run python main.py
        env:
          METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ASKNEWS_SECRET: ${{ secrets.ASKNEWS_SECRET }}
          ASKNEWS_CLIENT_ID: ${{ secrets.ASKNEWS_CLIENT_ID }}

      - name: Archive forecasts
        if: ${{ exists('forecasts') }}
        run: |
          mkdir -p artifacts
          zip -qr artifacts/forecasts.zip forecasts

      - uses: actions/upload-artifact@v4
        if: ${{ exists('forecasts') }}
        with:
          name: forecasts
          path: artifacts/forecasts.zip
          retention-days: 7

      - name: Commit & push updates
        if: ${{ exists('forecasts') && steps.cache-venv.outcome == 'success' }}
        run: |
          git config --global user.name  "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add forecasts .cache
          git diff --cached --quiet || git commit -m "chore: update forecasts"
          git push --force-with-lease origin HEAD:main
